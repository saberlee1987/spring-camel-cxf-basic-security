
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.saber.spring_camel_cxf_client.dto.soap;

import javax.jws.WebService;
import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 3.5.0
 * 2022-01-22T13:01:50.867+03:30
 * Generated source version: 3.5.0
 *
 */

@WebService(
                      serviceName = "PersonSoapService",
                      portName = "PersonSoapServicePort",
                      targetNamespace = "http://soap.spring_camel_service_provider.saber.com/",
                      wsdlLocation = "file:/C:/Users/azizi.s/AppData/Local/Temp/tempdir1274775803753022220.tmp/personSoap_1.wsdl",
                      endpointInterface = "com.saber.spring_camel_cxf_client.dto.soap.PersonSoapService")

public class PersonSoapServicePortImpl implements PersonSoapService {

    private static final Logger LOG = Logger.getLogger(PersonSoapServicePortImpl.class.getName());

    /* (non-Javadoc)
     * @see com.saber.spring_camel_cxf_client.dto.soap.PersonSoapService#addPerson(com.saber.spring_camel_cxf_client.dto.soap.AuthHeader authHeader, com.saber.spring_camel_cxf_client.dto.soap.PersonSoapDto personSoapDto)*
     */
    public PersonSoapResponse addPerson(AuthHeader authHeader, PersonSoapDto personSoapDto) {
        LOG.info("Executing operation addPerson");
        System.out.println(authHeader);
        System.out.println(personSoapDto);
        try {
            PersonSoapResponse _return = null;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.saber.spring_camel_cxf_client.dto.soap.PersonSoapService#updatePersonByNationalCode(com.saber.spring_camel_cxf_client.dto.soap.AuthHeader authHeader, java.lang.String nationalCode, com.saber.spring_camel_cxf_client.dto.soap.PersonSoapDto personDto)*
     */
    public PersonSoapResponse updatePersonByNationalCode(AuthHeader authHeader, String nationalCode, PersonSoapDto personDto) {
        LOG.info("Executing operation updatePersonByNationalCode");
        System.out.println(authHeader);
        System.out.println(nationalCode);
        System.out.println(personDto);
        try {
            PersonSoapResponse _return = null;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.saber.spring_camel_cxf_client.dto.soap.PersonSoapService#findByNationalCode(com.saber.spring_camel_cxf_client.dto.soap.AuthHeader authHeader, java.lang.String nationalCode)*
     */
    public PersonSoapResponse findByNationalCode(AuthHeader authHeader, String nationalCode) {
        LOG.info("Executing operation findByNationalCode");
        System.out.println(authHeader);
        System.out.println(nationalCode);
        try {
            PersonSoapResponse _return = null;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.saber.spring_camel_cxf_client.dto.soap.PersonSoapService#deletePersonByNationalCode(com.saber.spring_camel_cxf_client.dto.soap.AuthHeader authHeader, java.lang.String nationalCode)*
     */
    public DeletePersonResponse deletePersonByNationalCode(AuthHeader authHeader, String nationalCode) {
        LOG.info("Executing operation deletePersonByNationalCode");
        System.out.println(authHeader);
        System.out.println(nationalCode);
        try {
            DeletePersonResponse _return = null;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.saber.spring_camel_cxf_client.dto.soap.PersonSoapService#findAll(com.saber.spring_camel_cxf_client.dto.soap.AuthHeader authHeader)*
     */
    public FindAllPersonsResponse findAll(AuthHeader authHeader) {
        LOG.info("Executing operation findAll");
        System.out.println(authHeader);
        try {
            FindAllPersonsResponse _return = null;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
