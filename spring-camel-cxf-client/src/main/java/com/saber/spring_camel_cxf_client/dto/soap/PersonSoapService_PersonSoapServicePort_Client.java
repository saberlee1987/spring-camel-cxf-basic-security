
package com.saber.spring_camel_cxf_client.dto.soap;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import javax.xml.namespace.QName;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.4.4
 * 2022-01-21T22:22:58.539+03:30
 * Generated source version: 3.4.4
 *
 */
public final class PersonSoapService_PersonSoapServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://soap.spring_camel_service_provider.saber.com/", "PersonSoapService");

    private PersonSoapService_PersonSoapServicePort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = PersonSoapService_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        PersonSoapService_Service ss = new PersonSoapService_Service(wsdlURL, SERVICE_NAME);
        PersonSoapService port = ss.getPersonSoapServicePort();

        {
        System.out.println("Invoking addPerson...");
        AddPerson _addPerson_parameters = null;
        AuthHeader _addPerson_authHeader = null;
        AddPersonResponse _addPerson__return = port.addPerson(_addPerson_parameters, _addPerson_authHeader);
        System.out.println("addPerson.result=" + _addPerson__return);


        }
        {
        System.out.println("Invoking updatePersonByNationalCode...");
        UpdatePersonByNationalCode _updatePersonByNationalCode_parameters = null;
        AuthHeader _updatePersonByNationalCode_authHeader = null;
        UpdatePersonByNationalCodeResponse _updatePersonByNationalCode__return = port.updatePersonByNationalCode(_updatePersonByNationalCode_parameters, _updatePersonByNationalCode_authHeader);
        System.out.println("updatePersonByNationalCode.result=" + _updatePersonByNationalCode__return);


        }
        {
        System.out.println("Invoking findByNationalCode...");
        FindByNationalCode _findByNationalCode_parameters = null;
        AuthHeader _findByNationalCode_authHeader = null;
        FindByNationalCodeResponse _findByNationalCode__return = port.findByNationalCode(_findByNationalCode_parameters, _findByNationalCode_authHeader);
        System.out.println("findByNationalCode.result=" + _findByNationalCode__return);


        }
        {
        System.out.println("Invoking deletePersonByNationalCode...");
        DeletePersonByNationalCode _deletePersonByNationalCode_parameters = null;
        AuthHeader _deletePersonByNationalCode_authHeader = null;
        DeletePersonByNationalCodeResponse _deletePersonByNationalCode__return = port.deletePersonByNationalCode(_deletePersonByNationalCode_parameters, _deletePersonByNationalCode_authHeader);
        System.out.println("deletePersonByNationalCode.result=" + _deletePersonByNationalCode__return);


        }
        {
        System.out.println("Invoking findAll...");
        FindAll _findAll_parameters = null;
        AuthHeader _findAll_authHeader = null;
        FindAllResponse _findAll__return = port.findAll(_findAll_parameters, _findAll_authHeader);
        System.out.println("findAll.result=" + _findAll__return);


        }

        System.exit(0);
    }

}
