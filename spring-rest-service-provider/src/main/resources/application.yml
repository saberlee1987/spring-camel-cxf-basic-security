server:
  port: 9090
  servlet:
    encoding:
      force: true
      charset: UTF-8
  jetty:
    accesslog:
      enabled: true
    threads:
      max: 3000
      min: 300
  max-http-header-size: 512000

  ssl:
    key-store-type: JKS
    key-store: classpath:keystore/person_api.jks
    key-store-password: saber@123
    key-alias: saber66
    enabled: true
    protocol: SSL

service:
  api:
    path: /services/person
  swagger:
    path: '/services/person-docs/v2/api-docs'
    title: 'Person Service APi'
    version: 'version1.3-1400/12/11'
    description: 'This is person api for test'


springdoc:
  swagger-ui:
    path: /swagger-ui.html
    csrf:
      use-local-storage: true
      enabled: true
    display-request-duration: true
    display-operation-id: true
    persist-authorization: true
    operations-sorter: method
  api-docs:
    groups:
      enabled: true
    path: ${service.swagger.path}
  oAuthFlow:
    authorizationUrl: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/auth
    tokenUrl: http://localhost:7080/auth/realms/saber66/protocol/openid-connect/token
    use-pkce-with-authorization-code-grant: true

spring:
  application:
    name: person-service
  c3p0:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test2
    username: saber66
    password: AdminSaber66
    minPoolSize: 10
    maxPoolSize: 30
    initialPoolSize: 10
    acquireIncrement: 5
    acquireRetryDelay: 600
    checkTimeout: 10000
    maxConnectionAge: 30
    maxIdleTimeout: 30
    maxStatementPerConnection: 100
    idleConnectionTestPeriod: 180
    testConnectionOnCheckout: false
    testConnectionOnCheckin: true
    numHelperThreads: 100
    preferredTestQuery: 'SELECT 1'
  jpa:
    generate-ddl: false
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: none
    show-sql: true
    database: mysql
    properties:
      hibernate:
        show_sql: true
        format_sql: true


camel:
  springboot:
    main-run-controller: true
    jmx-management-statistics-level: extended
    endpoint-runtime-statistics-enabled: true
    jmx-enabled: true
  cloud:
    consul:
      service-host: localhost
      url: http://localhost:8500
      id: ${spring.application.name}
      registrationScheduled: 30000
    service-call:
      default-load-balancer: true


hawtio:
  authenticationEnabled: false
management:
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      sla:
        "[http.server.requests]": 10ms, 100ms
      percentiles:
        "[http.server.requests]": 0.5, 0.75, 0.95, 0.98, 0.99, 0.999, 1.0




  endpoints:
    web:
      base-path: /actuators/person-api
      exposure:
        include: '*'

